name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  RUST_VERSION: '1.75'

jobs:
  # Frontend CI
  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint frontend
        run: npm run lint

      - name: Run frontend tests
        run: npm run test -- --coverage --watchAll=false

      - name: Build frontend
        run: npm run build

      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./apps/qualinova-frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  # Contracts CI
  contracts-ci:
    name: Contracts CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Soroban CLI
        run: |
          curl -sSL https://soroban.stellar.org/install | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build contracts
        working-directory: ./apps/qualinova-contracts
        run: npm run build

      - name: Run contract tests
        working-directory: ./apps/qualinova-contracts
        run: npm run test

      - name: Upload contract test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: contract-test-results
          path: ./apps/qualinova-contracts/target/debug/

  # Security and Quality Checks
  security-checks:
    name: Security & Quality
    runs-on: ubuntu-latest
    needs: [frontend-ci, contracts-ci]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for outdated dependencies
        run: npm outdated || true

      - name: Format check
        run: npm run format -- --check

  # Build and Test Summary
  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [frontend-ci, contracts-ci, security-checks]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Summary
        run: |
          echo "## ðŸš€ Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Frontend CI Status: ${{ needs.frontend-ci.result }}" >> $GITHUB_STEP_SUMMARY
          echo "### Contracts CI Status: ${{ needs.contracts-ci.result }}" >> $GITHUB_STEP_SUMMARY
          echo "### Security Checks Status: ${{ needs.security-checks.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All checks completed successfully! âœ…" >> $GITHUB_STEP_SUMMARY