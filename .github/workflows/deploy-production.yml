name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - futurenet
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [main]

env:
  NODE_VERSION: "18"
  RUST_VERSION: "1.75"

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' }}

    environment:
      name: production
      url: ${{ steps.deploy-frontend.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.PRODUCTION_API_URL }}
          NEXT_PUBLIC_ENVIRONMENT: production

      - name: Deploy frontend to production
        id: deploy-frontend
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/qualinova-frontend
          vercel-args: "--prod"

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Install Soroban CLI
        run: |
          curl -sSL https://soroban.stellar.org/install | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Deploy contracts to futurenet
        working-directory: ./apps/qualinova-contracts
        run: npm run deploy:futurenet
        env:
          STELLAR_SECRET_KEY: ${{ secrets.STELLAR_SECRET_KEY_FUTURENET }}

      - name: Create release tag
        if: success()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v$(date +%Y%m%d-%H%M%S)" -m "Production deployment $(date)"
          git push origin --tags

      - name: Notify deployment success
        if: success()
        run: |
          echo "## 🚀 Production Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Frontend URL:** ${{ steps.deploy-frontend.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** Production" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed at:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Release Tag:** v$(date +%Y%m%d-%H%M%S)" >> $GITHUB_STEP_SUMMARY

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "## ❌ Production Deployment Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check the logs for more details." >> $GITHUB_STEP_SUMMARY
